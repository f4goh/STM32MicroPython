# Objet du script :# Mesurer une distance avec le capteur de distance par ultrasons Grove# Affiche cette distance sur le port série USB_USER.# Code généré à partir de l'interface de programmation par blocs de # Vittascience et retouché.import machineimport utime# Module sonar branché sur la broche d8d8 = machine.Pin('D8', machine.Pin.OUT)@micropython.native # Décorateur pour forcer une génération de code optimisé STM32def grove_getUltrasonicData(pin, timeout_us=30000):	# On éteint la broche de commande (SIG)	pin.init(machine.Pin.OUT)	pin.off()	utime.sleep_us(2)	# On allume la broche de commande pendant 10 µs	pin.on()	utime.sleep_us(10)	# ... puis on l'éteint, ce qui fait démarrer l'émission 	# d'ultrasons à 40 kHz par le module	pin.off()	pin.init(machine.Pin.IN)		# Temps écoulé entre émission des ultrasons et réception de leur écho	# la méthode time_pulse_us() compte la durée d'une impulsion en microsecondes sur 	# la broche pin.	duration = machine.time_pulse_us(pin, 1, timeout_us)/1e6	if duration > 0:		# Calcule la distance en centimètres à partir de la durée de l'impulsion 		# renvoyée par le sonar :		# distance de l'obstacle = 34000 cm/s (vitesse du son) x duration divisée par 2		return round(17150 * duration)	else:		return -1while True:		# Mesure de la distance 	distance = grove_getUltrasonicData(d8)	if distance > 0:		print("Distance : %d cm" %distance)	else:		print("Erreur de mesure")		# Temporisation d'une seconde	utime.sleep(1)